###################################################
Pre-Install Checklist:
[x] - Install backend server.
[x] - Install frontend server.
[x] - Test run backend server.
[x] - Test run frontend server.


Issues:

Error:
I received an error: 

"Cannot read property 'length' of undefined
 at lineCounter (C:\Users\Nate\Documents\Programs\react-frontend-homework\node_modules\parcel-bundler\src\utils\lineCounter.js:3:30)" 

When attempting npm start


Resolution: 
I deleted .cache directory in the root project folder and re-ran npm start.


Error:
When running docker build -t rocketmiles/react-backend-api . I received an error:

"#9 [build 4/4] RUN ./gradlew build --no-daemon
#9 sha256:c3477be12699aec7ae00b14ea7d916ba08a59ae08757c3d95c062ad266717fc6
#9 0.179 /usr/bin/env: ‘sh\r’: No such file or directory
#9 ERROR: executor failed running [/bin/sh -c ./gradlew build --no-daemon]: exit code: 127"

Resolution:

Installed gradle 7.0.2 for winx64 on host PC, set up gradle env var, and ran "gradle wrapper" from gitbash to init gradle daemon.


###################################################
Technical Requirements:

[x] - At least 2 components in the application,
[] - Filter the result set by hotel name
[] - Sort the result set by price in ascending order.
[] - Handle all cases where the application might fail or produce no results to the user gracefully.
[] - Add additional unit tests for core functionality.

Stretch Goals:
[x] - Create Checklist
[x] - Focus on TDD
[] - Details displayed on select
[] - Placeholder Image for 404 image links
[] - Styling Touchup
[] - Review comments for clarity
[] - Write Readme


###################################################
Component Tree:

App
	HotelFilterInput
	HotelList
		HotelCard
			HotelCardSelectInput
			

Component Details:

App
	UserInputs Component
	HotelList Component
	Master state
	
HotelFilterInput
	Inputs
		Name
		Price Menu
		Reset
	
HotelList
	Data
        hotels.hotelStaticContent.name
	Select
	
Notes:
Setup issues.
Break down components for the first requirement, how will they need to scale? What functionality can be grouped?
I wanted to be able to test the backend get request, so I set up a mock axios get function with Jest, but I was getting a "RegeneratorRuntime-is-not-defined" error. Turns out Babel transform runtime needs to be installed to test promises.
Once I ran tests on the Axios API call to get hotel data, and have ensured we're targeting the correct address, we're only calling GET once, and we're getting expected data back, I am ready to look at how we want to store that data in state, want to avoid prop drilling!


User Inputs:
Hotel Name
	input character event - filter the list of hotels by results.hotels.hotelStaticContent.name
		use Array.filter method here?
Price
	onSelect event - sort HotelList by results.hotels.lowestAveragePrice both ASC (low to high) and DESC (high to low)
		use Array.sort method here?
Reset
	onClick event - reset the filters to their default states.
		ensure the HotelList component re-renders so we map through each HotelCard hotel again.
Select
	onClick event - Display additional API data in the relevant hotel card to client.

State Requirements:
	isSelected
HotelFilterInput
	Local State:
		