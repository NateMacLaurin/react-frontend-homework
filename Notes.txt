###################################################
Component Tree:

App
	HotelFilterInput
		HotelList
			HotelCard
		HotelError
	HotelError
			
	Reasoning: 

	HotelList as a child of HotelFilterInput: the list displayed directly depends on the filters input by the user, 
				so as the input state changes, we want to re-render the list each time based on our filter/sort results.
	HotelCard as a child of HotelList: HotelCard will contain select button which will display/un-display additional data based on local state, 
				so I want this scoped to its own component to avoid unnecessary re-renders of HotelList due to the localstate change.
	HotelError renders on App conditionally if the API GET request returns HTTP 500 to fail gracefully to the user.
	HotelError renders on HotelFilterInput conditionally if the filter returns no results to fail gracefully to the user.

###################################################
Component Details:

App
	hotelList populated by API Get request on import when the app is rendered.
	Conditional { hotelList ? HotelFilterInput : HotelBackendError}
	HotelError renders conditionally if the API Get request fails.
	HotelFilterInput Component which receives the hotelList as a prop from App.
	
	Reasoning:	
		We can render it here because the master list of hotels available to the user shouldn't change. In this way, we make one initial API call when App is rendered.
		Handle filtering by passing the data on props to the HotelFilterInput component, creating a filtered and sorted array in that component, and then passing that array down to list.
	
HotelFilterInput
	Input LocalStates
		nameFilterInput (default empty string), sortSelect (default "Recommended"), 
		
	Local const:
		filteredSortedHotelList -> filter function will run on each render
	User Inputs
		Input Field: Hotel Name Filter
			event - sets nameFilterInput
		Select: Price Recommended (Default), ASC, DESC
			event - sets sortSelect
		Reset Button
			onClick - calls Reset function that sets localstates of inputs to default.
			
	Filter and Sort functionality handled here. How?
		1. Filter: pass the filteredSortedList local state and the nameFilterInput string entered by user 
		2. Sort: pass the filteredSortedHotelList local state and the sortSelect entered by user
	Conditional { results ? HotelList Component {filteredSortedHotelList} : HotelFilterError} - if our filtered or sorted lists return nothing, we need to fail gracefully, else pass the filteredSortedHotelList on props.
	
	
HotelList
	Map the passed filterList prop from HotelFilterInput into HotelCard components
	
HotelCard
	Data
        hotels.hotelStaticContent.name etc
	Select
		button onClick function to display extra data

HotelError
	Display the error info from the passed prop and a button to prompt the user to reset the filters and retry the API call. 
	
###################################################
User Inputs:
Hotel Name
	input character event - filter the list of hotels by results.hotels.hotelStaticContent.name
		use Array.filter method here?
Hotel Sort Select
	onSelect event - sort HotelList by results.hotels.lowestAveragePrice both ASC (low to high) and DESC (high to low)
		use Array.sort method here?
Reset
	onClick event - reset the user input states to default.
		ensure the HotelList component re-renders so we map through each HotelCard hotel again.
Select
	onClick event - Display additional API data in the relevant hotel card to client.
Cancel/Unselect
	onClick event - Un-select the additional API data in the relevant hotel card.

###################################################
State Requirements:
HotelCard
	isSelected
HotelFilterInput
	nameFilterInput
	sortSelect

###################################################
Style Swipes:

header image:
<img src="https://d4466r3vlr9ym.cloudfront.net/uploads/logos/rocketmiles.png" height="auto" maxwidth="230,230,255" alt="Logo">

color: #ff4e21
complement RGB: #21d3ff
complement RYB: #21ffd6

rocket orange emphasis color
font-family: "Helvetica Neue", "Helvetica", "Arial", sans-serif;

footer background color:
background-color: rgb(27, 28, 36)

favicon:
401 from rocketmiles REST server :(